・配列
 プログラミングの仕組み・・・あるデータをグループ化して、一つの変数として扱う仕組み
 配列操作機能・・・取り出し、書換え、削除
 モノに例えると下駄箱
  下駄箱に複数の人の靴を取り扱う
・作り方
 配列の宣言・・・ex) int[] arr; →int型の要素を代入できるarr配列を宣言している
 要素代入・・・ex) arr = new int[5]; →配列変数arrにint型の要素を５つ代入している

 これらをまとめると int[] arr = new int[5];・・・これで配列が作れた

・初期化
 変数の値を取り出すには値を代入して初期化しないとダメ
 int[] arr = new int[5];  //配列arrの宣言 int型のarr配列変数に要素５つ代入している

 arr[0] = 3; // 1番目（先頭）の要素に 3 を代入 
 arr[1] = 1; // 2番目の要素に 1 を代入 
 arr[2] = 6; // 3番目の要素に 6 を代入 
 arr[3] = 0; // 4番目の要素に 0 を代入 
 arr[4] = 4; // 5番目の要素に 4 を代入

 これをまとめると
 // 6、10、3、1、8 を要素の値（初期値）とする、要素数 5 の 
 // a という名前のint型配列を宣言。 
 int[] a = {6, 10, 3, 1, 8};・・・初期化と変数宣言をまとめたモノ

 length・・・要素数を調べてくれるフィールド（情報）がある、、メリット・・プログラマが配列の要素数を別の変数に保持するなどの管理をする必要がなくなるため、配列がとても利用しやすくなります。

 int[] arr = {2, 0, 95}; 

 // 配列arrのlengthフィールドを表示してみる。 →要素数は「3」が表示される 
 System.out.println("配列arrの要素数…" + arr.length);

 結果
 配列arrの要素数・・・３つ

 配列の要素を更新・参照するには配列名の後ろに[]をつけ、数字（添え字）を指定して要素を特定する。要素番号＝添え字
 // 添え字（インデックス）が 2 の要素の値を表示 
System.out.println("arr[2] … " + arr[2]);

上記の例だと
arr[] = ...95  「95」はarr配列の要素番号３であるため「95」が表示された